
C-MINUS COMPILATION: cases/test/test.7.txt
	1: reserved word: int
	1: ID, name= x
	1: [
	1: NUM, val= 10
	1: ]
	1: ;
	2: reserved word: int
	2: ID, name= minloc
	2: (
	2: reserved word: int
	2: ID, name= a
	2: [
	2: ]
	2: ,
	2: reserved word: int
	2: ID, name= low
	2: ,
	2: reserved word: int
	2: ID, name= high
	2: )
	3: {
	3: reserved word: int
	3: ID, name= i
	3: ;
	3: reserved word: int
	3: ID, name= x
	3: ;
	3: reserved word: int
	3: ID, name= k
	3: ;
	4: ID, name= k
	4: =
	4: ID, name= low
	4: ;
	5: ID, name= x
	5: =
	5: ID, name= a
	5: [
	5: ID, name= low
	5: ]
	5: ;
	6: ID, name= i
	6: =
	6: ID, name= low
	6: +
	6: NUM, val= 1
	6: ;
	7: reserved word: while
	7: (
	7: ID, name= i
	7: <
	7: ID, name= high
	7: )
	8: {
	8: reserved word: if
	8: (
	8: ID, name= a
	8: [
	8: ID, name= i
	8: ]
	8: <
	8: ID, name= x
	8: )
	9: {
	9: ID, name= x
	9: =
	9: ID, name= a
	9: [
	9: ID, name= i
	9: ]
	9: ;
	10: ID, name= k
	10: =
	10: ID, name= i
	10: ;
	10: }
	11: ID, name= i
	11: =
	11: ID, name= i
	11: +
	11: NUM, val= 1
	11: ;
	12: }
	13: reserved word: return
	13: ID, name= k
	13: ;
	14: }
	16: reserved word: void
	16: ID, name= sort
	16: (
	16: reserved word: int
	16: ID, name= a
	16: [
	16: ]
	16: ,
	16: reserved word: int
	16: ID, name= low
	16: ,
	16: reserved word: int
	16: ID, name= high
	16: )
	17: {
	17: reserved word: int
	17: ID, name= i
	17: ;
	17: reserved word: int
	17: ID, name= k
	17: ;
	18: ID, name= i
	18: =
	18: ID, name= low
	18: ;
	19: reserved word: while
	19: (
	19: ID, name= i
	19: <
	19: ID, name= high
	19: -
	19: NUM, val= 1
	19: )
	20: {
	20: reserved word: int
	20: ID, name= t
	20: ;
	21: ID, name= k
	21: =
	21: ID, name= minloc
	21: (
	21: ID, name= a
	21: ,
	21: ID, name= i
	21: ,
	21: ID, name= high
	21: )
	21: ;
	22: ID, name= t
	22: =
	22: ID, name= a
	22: [
	22: ID, name= k
	22: ]
	22: ;
	23: ID, name= a
	23: [
	23: ID, name= k
	23: ]
	23: =
	23: ID, name= a
	23: [
	23: ID, name= i
	23: ]
	23: ;
	24: ID, name= a
	24: [
	24: ID, name= i
	24: ]
	24: =
	24: ID, name= t
	24: ;
	25: ID, name= i
	25: =
	25: ID, name= i
	25: +
	25: NUM, val= 1
	25: ;
	26: }
	27: }
	29: reserved word: void
	29: ID, name= main
	29: (
	29: reserved word: void
	29: )
	30: {
	30: reserved word: int
	30: ID, name= i
	30: ;
	31: ID, name= i
	31: =
	31: NUM, val= 0
	31: ;
	32: reserved word: while
	32: (
	32: ID, name= i
	32: <
	32: NUM, val= 10
	32: )
	33: {
	33: ID, name= x
	33: [
	33: ID, name= i
	33: ]
	33: =
	33: ID, name= input
	33: (
	33: )
	33: ;
	34: ID, name= i
	34: =
	34: ID, name= i
	34: +
	34: NUM, val= 1
	34: ;
	34: }
	35: ID, name= sort
	35: (
	35: ID, name= x
	35: ,
	35: NUM, val= 0
	35: ,
	35: NUM, val= 10
	35: )
	35: ;
	36: ID, name= i
	36: =
	36: NUM, val= 0
	36: ;
	37: reserved word: while
	37: (
	37: ID, name= i
	37: <
	37: NUM, val= 10
	37: )
	38: {
	38: ID, name= output
	38: (
	38: ID, name= x
	38: [
	38: ID, name= i
	38: ]
	38: )
	38: ;
	39: ID, name= i
	39: =
	39: ID, name= i
	39: +
	39: NUM, val= 1
	39: ;
	39: }
	40: }
	41: EOF
